{"version":3,"sources":["Hooks/useState.js","App.js","reportWebVitals.js","index.js"],"names":["UseState","React","useState","myNum","setMyNum","className","class","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+JAgCeA,EA7BE,WAEf,MAA0BC,IAAMC,SAAS,GAAzC,mBAAOC,EAAP,KAAcC,EAAd,KAEA,OACE,mCACE,sBAAKC,UAAU,aAAf,UACE,4BAAIF,IACJ,sBAAKG,MAAM,UAAUC,QAAS,kBAAMH,EAASD,EAAQ,IAArD,UACE,yBACA,yBACA,yBACA,yBAJF,UAOA,sBACEG,MAAM,UACNC,QAAS,kBAAmBH,EAAZD,EAAQ,EAAaA,EAAQ,EAAc,IAF7D,UAGE,yBACA,yBACA,yBACA,yBANF,gBCLOK,EAPH,WACV,OAAO,cAAC,EAAD,KCKMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.064dfdd1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst UseState = () => {\r\n  // const initialData = 15;\r\n  const [myNum, setMyNum] = React.useState(0);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"center_div\">\r\n        <p>{myNum}</p>\r\n        <div class=\"button2\" onClick={() => setMyNum(myNum + 1)}>\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n          INCR\r\n        </div>\r\n        <div\r\n          class=\"button2\"\r\n          onClick={() => (myNum > 0 ? setMyNum(myNum - 1) : setMyNum(0))}>\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n          DECR\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UseState;\r\n","import React from \"react\";\n// import Resturant from \"./component/Basics/Resturant\";\nimport UseState from \"./Hooks/useState\";\n// import UseEffect from \"./Hooks/useEffects\";\n// import UseReducer from \"./Hooks/useReducer\"\n\nconst App = () => {\n  return <UseState />;\n  //return <UseEffect />;\n  // return <UseReducer />;\n\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}